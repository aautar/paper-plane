const PaperPlane={ContentType:{APPLICATION_JSON:"application/json"},parseXHRResponseData:function(e){return e.getResponseHeader("Content-Type")===PaperPlane.ContentType.APPLICATION_JSON?JSON.parse(e.responseText):e.responseText},makeFormDataRequestData:function(e,n){return{body:e,headers:n||new Map}},makeJsonRequestData:function(e,n){return(n=n||new Map).set("Content-Type",PaperPlane.ContentType.APPLICATION_JSON),{body:JSON.stringify(e),headers:n}},xhr:function(e,n,t,a,o,r){const s=t.headers;a=a||(()=>{}),o=o||(()=>{}),r=r||(()=>{});const p=function(e,n){o(n||PaperPlane.parseXHRResponseData(u),u)},u=new XMLHttpRequest;u.open(e,n);for(let[e,n]of s)u.setRequestHeader(e,n);return u.timeout=3e4,u.onload=function(){u.status>=400?p():a(PaperPlane.parseXHRResponseData(u),u)},u.ontimeout=function(){p(0,"client timeout")},u.onerror=function(){p()},u.onloadend=function(){r(PaperPlane.parseXHRResponseData(u),u)},u.send(t.body),u},post:function(e,n,t,a,o){return PaperPlane.xhr("POST",e,n,t,a,o)},put:function(e,n,t,a,o){return PaperPlane.xhr("PUT",e,n,t,a,o)},delete:function(e,n,t,a,o){return PaperPlane.xhr("DELETE",e,n,t,a,o)},get:function(e,n,t,a,o){return PaperPlane.xhr("GET",e,{body:null,headers:n},t,a,o)},head:function(e,n,t,a,o){return PaperPlane.xhr("HEAD",e,{body:null,headers:n},t,a,o)},postBeacon:function(e,n){return navigator.sendBeacon(e,n.body)}};